{
  "contractName": "Escapable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_escapeHatchCaller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_escapeHatchDestination",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EscapeHatchCalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "escapeHatchCaller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escapeHatchDestination",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newEscapeHatchCaller",
          "type": "address"
        }
      ],
      "name": "changeEscapeCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escapeHatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escapeHatchCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_escapeHatchDestination\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EscapeHatchCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newEscapeHatchCaller\",\"type\":\"address\"}],\"name\":\"changeEscapeCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escapeHatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escapeHatchCaller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escapeHatchDestination\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ghadi Mhawej*\",\"kind\":\"dev\",\"methods\":{\"changeEscapeCaller(address)\":{\"params\":{\"_newEscapeHatchCaller\":\"New address to be assigned to escapeHatchCaller\"}},\"constructor\":{\"params\":{\"_escapeHatchCaller\":\"The address of a trusted account or contract to send the ether in this contract\",\"_escapeHatchDestination\":\"The address of a safe location to send the ether held in this contract to\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Escapable\",\"version\":1},\"userdoc\":{\"events\":{\"EscapeHatchCalled(uint256)\":{\"notice\":\"EscapeHatch event definition\"}},\"kind\":\"user\",\"methods\":{\"changeEscapeCaller(address)\":{\"notice\":\"Changes the address assigned to call `escapeHatch()`\"},\"constructor\":{\"notice\":\"The Constructor assigns the `escapeHatchDestination` and the `escapeHatchCaller`\"},\"escapeHatch()\":{\"notice\":\"Sends all of the eth contained in the contract to the escapeHatchDestinationshould only be called as last resort\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Escapable.sol\":\"Escapable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Escapable.sol\":{\"keccak256\":\"0xba557cf5fd1a200cfcc8fd6a307a2896839e8b28250ecd503996828b9bc4e989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79efcbd3016c1c8af039fe1f50600c5a2694d08b2a7065ea34a287d87ee4c05e\",\"dweb:/ipfs/QmS11fZZc5F17Eh6wmZPk6AFAYGJUVchkjKvoGaqGcE1Za\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105a93803806105a983398101604081905261002f916100d9565b6100383361006d565b60018055600280546001600160a01b039384166001600160a01b0319918216179091556003805492909316911617905561010c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d457600080fd5b919050565b600080604083850312156100ec57600080fd5b6100f5836100bd565b9150610103602084016100bd565b90509250929050565b61048e8061011b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100ce5780638da5cb5b146100d6578063f2fde38b146100e7578063f5b61230146100fa57600080fd5b80631554611f146100825780631f6eb6e71461008c578063681617c7146100bb575b600080fd5b61008a61010d565b005b60025461009f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61008a6100c93660046103cb565b61022a565b61008a610294565b6000546001600160a01b031661009f565b61008a6100f53660046103cb565b6102a8565b60035461009f906001600160a01b031681565b6000546001600160a01b031633148061013957506002546001600160a01b0316336001600160a01b0316145b61015e5760405162461bcd60e51b8152600401610155906103fb565b60405180910390fd5b6002600154036101b05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610155565b600260015560035460405147916001600160a01b03169082156108fc029083906000818181858888f193505050501580156101ef573d6000803e3d6000fd5b506040518181527f3a7a1ba90aaa86fa9f6b921c3d600a5c870f8ebd05e7fbd30f93930f3caa5db59060200160405180910390a15060018055565b6000546001600160a01b031633148061025657506002546001600160a01b0316336001600160a01b0316145b6102725760405162461bcd60e51b8152600401610155906103fb565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61029c610321565b6102a6600061037b565b565b6102b0610321565b6001600160a01b0381166103155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610155565b61031e8161037b565b50565b6000546001600160a01b031633146102a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156103dd57600080fd5b81356001600160a01b03811681146103f457600080fd5b9392505050565b60208082526037908201527f457363617061626c653a2063616c6c6572206973206e6f7420746865206f776e60408201527f6572206f7220657363617065486174636843616c6c657200000000000000000060608201526080019056fea26469706673582212204bb561e0ed4c41485c96a8c7fbe2bf44c30f5ffedb48f0d8e21be1af3e4f0fc064736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100ce5780638da5cb5b146100d6578063f2fde38b146100e7578063f5b61230146100fa57600080fd5b80631554611f146100825780631f6eb6e71461008c578063681617c7146100bb575b600080fd5b61008a61010d565b005b60025461009f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61008a6100c93660046103cb565b61022a565b61008a610294565b6000546001600160a01b031661009f565b61008a6100f53660046103cb565b6102a8565b60035461009f906001600160a01b031681565b6000546001600160a01b031633148061013957506002546001600160a01b0316336001600160a01b0316145b61015e5760405162461bcd60e51b8152600401610155906103fb565b60405180910390fd5b6002600154036101b05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610155565b600260015560035460405147916001600160a01b03169082156108fc029083906000818181858888f193505050501580156101ef573d6000803e3d6000fd5b506040518181527f3a7a1ba90aaa86fa9f6b921c3d600a5c870f8ebd05e7fbd30f93930f3caa5db59060200160405180910390a15060018055565b6000546001600160a01b031633148061025657506002546001600160a01b0316336001600160a01b0316145b6102725760405162461bcd60e51b8152600401610155906103fb565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61029c610321565b6102a6600061037b565b565b6102b0610321565b6001600160a01b0381166103155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610155565b61031e8161037b565b50565b6000546001600160a01b031633146102a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156103dd57600080fd5b81356001600160a01b03811681146103f457600080fd5b9392505050565b60208082526037908201527f457363617061626c653a2063616c6c6572206973206e6f7420746865206f776e60408201527f6572206f7220657363617065486174636843616c6c657200000000000000000060608201526080019056fea26469706673582212204bb561e0ed4c41485c96a8c7fbe2bf44c30f5ffedb48f0d8e21be1af3e4f0fc064736f6c63430008100033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:491:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:6"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:6",
                "type": ""
              }
            ],
            "src": "14:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:195:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "349:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "352:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "304:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "365:50:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "405:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "375:29:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:40:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "424:59:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "468:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "479:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "464:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "434:29:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:49:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:6",
                "type": ""
              }
            ],
            "src": "196:293:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2468:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:6",
                "type": ""
              }
            ],
            "src": "14:203:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "292:216:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "313:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "322:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "309:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "309:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "305:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "302:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "363:36:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "389:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "376:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:23:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "367:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "462:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "471:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "474:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "464:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "464:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "464:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "421:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "432:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "447:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "452:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "443:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "443:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "456:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "439:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "439:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "428:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "428:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "418:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "418:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "411:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "408:70:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "487:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "497:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "487:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "258:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "269:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "281:6:6",
                "type": ""
              }
            ],
            "src": "222:286:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "630:102:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "640:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "652:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "663:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "648:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "640:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "682:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "697:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "713:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "718:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "709:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "709:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "722:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "705:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "705:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "693:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "693:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "675:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "675:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "675:51:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "599:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "610:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "621:4:6",
                "type": ""
              }
            ],
            "src": "513:219:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "911:245:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "928:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "939:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "921:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "921:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "962:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "973:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "958:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "958:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "978:2:6",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "951:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "951:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "951:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1001:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1012:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "997:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "997:18:6"
                      },
                      {
                        "hexValue": "457363617061626c653a2063616c6c6572206973206e6f7420746865206f776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1017:34:6",
                        "type": "",
                        "value": "Escapable: caller is not the own"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "990:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "990:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "990:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1072:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1083:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1068:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1068:18:6"
                      },
                      {
                        "hexValue": "6572206f7220657363617065486174636843616c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1088:25:6",
                        "type": "",
                        "value": "er or escapeHatchCaller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1061:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1061:53:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1061:53:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1123:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1135:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1146:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1131:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1131:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1123:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e5005702a6dd0f536c8fd6f7991e26f13d607e07cb2aeb70c753349e2af723fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "888:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "902:4:6",
                "type": ""
              }
            ],
            "src": "737:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1335:181:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1352:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1363:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1345:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1345:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1345:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1386:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1397:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1382:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1382:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1402:2:6",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1375:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1375:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1375:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1425:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1436:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1421:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1421:18:6"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1441:33:6",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1414:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1414:61:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1414:61:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1484:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1496:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1507:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1492:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1492:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1484:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1312:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1326:4:6",
                "type": ""
              }
            ],
            "src": "1161:355:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1622:76:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1632:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1644:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1655:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1640:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1632:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1674:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1685:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1667:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1591:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1602:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1613:4:6",
                "type": ""
              }
            ],
            "src": "1521:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1877:228:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1894:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1905:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1887:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1887:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1887:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1928:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1939:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1924:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1924:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1944:2:6",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1917:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1917:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1917:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1967:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1978:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1963:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1963:18:6"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1983:34:6",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1956:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1956:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1956:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2038:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2049:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2034:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2034:18:6"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2054:8:6",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2027:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2027:36:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2027:36:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2072:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2084:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2095:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2080:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2080:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2072:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1854:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1868:4:6",
                "type": ""
              }
            ],
            "src": "1703:402:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2284:182:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2301:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2312:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2294:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2294:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2335:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2346:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2331:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2331:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2351:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2324:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2324:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2324:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2374:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2385:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2370:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2370:18:6"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2390:34:6",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2363:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2363:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2363:62:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2434:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2446:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2457:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2442:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2442:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2434:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2261:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2275:4:6",
                "type": ""
              }
            ],
            "src": "2110:356:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_e5005702a6dd0f536c8fd6f7991e26f13d607e07cb2aeb70c753349e2af723fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"Escapable: caller is not the own\")\n        mstore(add(headStart, 96), \"er or escapeHatchCaller\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "264:1886:3:-:0;;;1228:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:2;936:18:0;:32::i;:::-;1701:1:1;1806:22;;1312:17:3;:38;;-1:-1:-1;;;;;1312:38:3;;;-1:-1:-1;;;;;;1312:38:3;;;;;;;1361:22;:57;;;;;;;;;;;264:1886;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:6:-;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;264:1886:3;;;;;;",
  "deployedSourceMap": "264:1886:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:221;;;:::i;:::-;;318:32;;;;;-1:-1:-1;;;;;318:32:3;;;;;;-1:-1:-1;;;;;178:32:6;;;160:51;;148:2;133:18;318:32:3;;;;;;;1590:180;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;2081:198;;;;;;:::i;:::-;;:::i;357:45:3:-;;;;;-1:-1:-1;;;;;357:45:3;;;1926:221;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;730:23:3;;:60;;-1:-1:-1;773:17:3;;-1:-1:-1;;;;;773:17:3;719:10:2;-1:-1:-1;;;;;757:33:3;;730:60;708:165;;;;-1:-1:-1;;;708:165:3;;;;;;;:::i;:::-;;;;;;;;;1744:1:1::1;2325:7;;:19:::0;2317:63:::1;;;::::0;-1:-1:-1;;;2317:63:1;;1363:2:6;2317:63:1::1;::::0;::::1;1345:21:6::0;1402:2;1382:18;;;1375:30;1441:33;1421:18;;;1414:61;1492:18;;2317:63:1::1;1161:355:6::0;2317:63:1::1;1744:1;2455:7;:18:::0;2061:22:3::2;::::0;:38:::2;::::0;2027:21:::2;::::0;-1:-1:-1;;;;;2061:22:3::2;::::0;:38;::::2;;;::::0;2027:21;;2011:13:::2;2061:38:::0;2011:13;2061:38;2027:21;2061:22;:38;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;2115:24:3::2;::::0;1667:25:6;;;2115:24:3::2;::::0;1655:2:6;1640:18;2115:24:3::2;;;;;;;-1:-1:-1::0;1701:1:1::1;2628:22:::0;;1926:221:3:o;1590:180::-;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;730:23:3;;:60;;-1:-1:-1;773:17:3;;-1:-1:-1;;;;;773:17:3;719:10:2;-1:-1:-1;;;;;757:33:3;;730:60;708:165;;;;-1:-1:-1;;;708:165:3;;;;;;;:::i;:::-;1721:17:::1;:41:::0;;-1:-1:-1;;;;;;1721:41:3::1;-1:-1:-1::0;;;;;1721:41:3;;;::::1;::::0;;;::::1;::::0;;1590:180::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;1905:2:6;2161:73:0::1;::::0;::::1;1887:21:6::0;1944:2;1924:18;;;1917:30;1983:34;1963:18;;;1956:62;-1:-1:-1;;;2034:18:6;;;2027:36;2080:19;;2161:73:0::1;1703:402:6::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;2312:2:6;1414:68:0;;;2294:21:6;;;2331:18;;;2324:30;2390:34;2370:18;;;2363:62;2442:18;;1414:68:0;2110:356:6;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;222:286:6:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:6;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:6:o;737:419::-;939:2;921:21;;;978:2;958:18;;;951:30;1017:34;1012:2;997:18;;990:62;1088:25;1083:2;1068:18;;1061:53;1146:3;1131:19;;737:419::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/// @notice libraries\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/**\r\n * @title Escapable\r\n * @author Ghadi Mhawej\r\n **/\r\n\r\ncontract Escapable is Ownable, ReentrancyGuard {\r\n    address public escapeHatchCaller;\r\n    address payable public escapeHatchDestination;\r\n\r\n    /// @notice EscapeHatch event definition\r\n    event EscapeHatchCalled(uint256 amount);\r\n\r\n    /// @dev The addresses preassigned to the `escapeHatchCaller` role or the owner are the only addresses that can call a function with this modifier\r\n    modifier onlyEscapeHatchCallerOrOwner() {\r\n        require(\r\n            _msgSender() == owner() || _msgSender() == escapeHatchCaller,\r\n            \"Escapable: caller is not the owner or escapeHatchCaller\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /// @notice The Constructor assigns the `escapeHatchDestination` and the `escapeHatchCaller`\r\n    /// @param _escapeHatchDestination The address of a safe location to send the ether held in this contract to\r\n    /// @param _escapeHatchCaller The address of a trusted account or contract to send the ether in this contract\r\n    constructor(address _escapeHatchCaller, address _escapeHatchDestination) {\r\n        escapeHatchCaller = _escapeHatchCaller;\r\n        escapeHatchDestination = payable(_escapeHatchDestination);\r\n    }\r\n\r\n    /// @notice Changes the address assigned to call `escapeHatch()`\r\n    /// @param _newEscapeHatchCaller New address to be assigned to escapeHatchCaller\r\n    function changeEscapeCaller(address _newEscapeHatchCaller)\r\n        external\r\n        onlyEscapeHatchCallerOrOwner\r\n    {\r\n        escapeHatchCaller = _newEscapeHatchCaller;\r\n    }\r\n\r\n    /// @notice Sends all of the eth contained in the contract to the escapeHatchDestination\r\n    /// @notice should only be called as last resort\r\n    function escapeHatch() external onlyEscapeHatchCallerOrOwner nonReentrant {\r\n        uint256 total = address(this).balance;\r\n\r\n        escapeHatchDestination.transfer(total);\r\n        emit EscapeHatchCalled(total);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Ghadi\\Desktop\\Portfolio\\Vault\\contracts\\Escapable.sol",
  "ast": {
    "absolutePath": "project:/contracts/Escapable.sol",
    "exportedSymbols": {
      "Context": [
        174
      ],
      "Escapable": [
        272
      ],
      "Ownable": [
        112
      ],
      "ReentrancyGuard": [
        152
      ]
    },
    "id": 273,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 176,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 177,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 273,
        "sourceUnit": 113,
        "src": "85:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 178,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 273,
        "sourceUnit": 153,
        "src": "139:62:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 180,
              "name": "Ownable",
              "nameLocations": [
                "286:7:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "286:7:3"
            },
            "id": 181,
            "nodeType": "InheritanceSpecifier",
            "src": "286:7:3"
          },
          {
            "baseName": {
              "id": 182,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "295:15:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 152,
              "src": "295:15:3"
            },
            "id": 183,
            "nodeType": "InheritanceSpecifier",
            "src": "295:15:3"
          }
        ],
        "canonicalName": "Escapable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 179,
          "nodeType": "StructuredDocumentation",
          "src": "205:55:3",
          "text": " @title Escapable\n @author Ghadi Mhawej*"
        },
        "fullyImplemented": true,
        "id": 272,
        "linearizedBaseContracts": [
          272,
          152,
          112,
          174
        ],
        "name": "Escapable",
        "nameLocation": "273:9:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1f6eb6e7",
            "id": 185,
            "mutability": "mutable",
            "name": "escapeHatchCaller",
            "nameLocation": "333:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 272,
            "src": "318:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 184,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5b61230",
            "id": 187,
            "mutability": "mutable",
            "name": "escapeHatchDestination",
            "nameLocation": "380:22:3",
            "nodeType": "VariableDeclaration",
            "scope": 272,
            "src": "357:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 186,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "357:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 188,
              "nodeType": "StructuredDocumentation",
              "src": "411:40:3",
              "text": "@notice EscapeHatch event definition"
            },
            "eventSelector": "3a7a1ba90aaa86fa9f6b921c3d600a5c870f8ebd05e7fbd30f93930f3caa5db5",
            "id": 192,
            "name": "EscapeHatchCalled",
            "nameLocation": "463:17:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "489:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "481:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "480:16:3"
            },
            "src": "457:40:3"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "697:196:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 196,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "730:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "730:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 198,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "746:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "746:7:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "730:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 201,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "757:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "757:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 203,
                            "name": "escapeHatchCaller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "773:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "757:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "730:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457363617061626c653a2063616c6c6572206973206e6f7420746865206f776e6572206f7220657363617065486174636843616c6c6572",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "805:57:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5005702a6dd0f536c8fd6f7991e26f13d607e07cb2aeb70c753349e2af723fe",
                          "typeString": "literal_string \"Escapable: caller is not the owner or escapeHatchCaller\""
                        },
                        "value": "Escapable: caller is not the owner or escapeHatchCaller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5005702a6dd0f536c8fd6f7991e26f13d607e07cb2aeb70c753349e2af723fe",
                          "typeString": "literal_string \"Escapable: caller is not the owner or escapeHatchCaller\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "708:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:165:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "708:165:3"
                },
                {
                  "id": 209,
                  "nodeType": "PlaceholderStatement",
                  "src": "884:1:3"
                }
              ]
            },
            "documentation": {
              "id": 193,
              "nodeType": "StructuredDocumentation",
              "src": "505:146:3",
              "text": "@dev The addresses preassigned to the `escapeHatchCaller` role or the owner are the only addresses that can call a function with this modifier"
            },
            "id": 211,
            "name": "onlyEscapeHatchCallerOrOwner",
            "nameLocation": "666:28:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:2:3"
            },
            "src": "657:236:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "1301:125:3",
              "statements": [
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 219,
                      "name": "escapeHatchCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "1312:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 220,
                      "name": "_escapeHatchCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "1332:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1312:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:38:3"
                },
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 223,
                      "name": "escapeHatchDestination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1361:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 226,
                          "name": "_escapeHatchDestination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "1394:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1386:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1386:8:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1386:32:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1361:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:57:3"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "901:321:3",
              "text": "@notice The Constructor assigns the `escapeHatchDestination` and the `escapeHatchCaller`\n @param _escapeHatchDestination The address of a safe location to send the ether held in this contract to\n @param _escapeHatchCaller The address of a trusted account or contract to send the ether in this contract"
            },
            "id": 231,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "_escapeHatchCaller",
                  "nameLocation": "1248:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "1240:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "_escapeHatchDestination",
                  "nameLocation": "1276:23:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "1268:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:61:3"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:3"
            },
            "scope": 272,
            "src": "1228:198:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "1710:60:3",
              "statements": [
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 239,
                      "name": "escapeHatchCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "1721:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 240,
                      "name": "_newEscapeHatchCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "1741:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1721:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:41:3"
                }
              ]
            },
            "documentation": {
              "id": 232,
              "nodeType": "StructuredDocumentation",
              "src": "1434:150:3",
              "text": "@notice Changes the address assigned to call `escapeHatch()`\n @param _newEscapeHatchCaller New address to be assigned to escapeHatchCaller"
            },
            "functionSelector": "681617c7",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 237,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 236,
                  "name": "onlyEscapeHatchCallerOrOwner",
                  "nameLocations": [
                    "1676:28:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 211,
                  "src": "1676:28:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1676:28:3"
              }
            ],
            "name": "changeEscapeCaller",
            "nameLocation": "1599:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "_newEscapeHatchCaller",
                  "nameLocation": "1626:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1618:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1617:31:3"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1710:0:3"
            },
            "scope": 272,
            "src": "1590:180:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "2000:147:3",
              "statements": [
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "2019:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "2011:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 252,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2011:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 259,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 256,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2035:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escapable_$272",
                            "typeString": "contract Escapable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Escapable_$272",
                            "typeString": "contract Escapable"
                          }
                        ],
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2027:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2027:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2041:7:3",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2027:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2011:37:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 263,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "2093:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 260,
                        "name": "escapeHatchDestination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "2061:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2084:8:3",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2061:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2061:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "2061:38:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "2133:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 266,
                      "name": "EscapeHatchCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "2115:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2115:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "2110:29:3"
                }
              ]
            },
            "documentation": {
              "id": 245,
              "nodeType": "StructuredDocumentation",
              "src": "1778:142:3",
              "text": "@notice Sends all of the eth contained in the contract to the escapeHatchDestination\n @notice should only be called as last resort"
            },
            "functionSelector": "1554611f",
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 247,
                  "name": "onlyEscapeHatchCallerOrOwner",
                  "nameLocations": [
                    "1958:28:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 211,
                  "src": "1958:28:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1958:28:3"
              },
              {
                "id": 250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 249,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1987:12:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151,
                  "src": "1987:12:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1987:12:3"
              }
            ],
            "name": "escapeHatch",
            "nameLocation": "1935:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1946:2:3"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2000:0:3"
            },
            "scope": 272,
            "src": "1926:221:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 273,
        "src": "264:1886:3",
        "usedErrors": []
      }
    ],
    "src": "33:2119:3"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Escapable.sol",
    "exportedSymbols": {
      "Context": [
        174
      ],
      "Escapable": [
        272
      ],
      "Ownable": [
        112
      ],
      "ReentrancyGuard": [
        152
      ]
    },
    "id": 273,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 176,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 177,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 273,
        "sourceUnit": 113,
        "src": "85:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 178,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 273,
        "sourceUnit": 153,
        "src": "139:62:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 180,
              "name": "Ownable",
              "nameLocations": [
                "286:7:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "286:7:3"
            },
            "id": 181,
            "nodeType": "InheritanceSpecifier",
            "src": "286:7:3"
          },
          {
            "baseName": {
              "id": 182,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "295:15:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 152,
              "src": "295:15:3"
            },
            "id": 183,
            "nodeType": "InheritanceSpecifier",
            "src": "295:15:3"
          }
        ],
        "canonicalName": "Escapable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 179,
          "nodeType": "StructuredDocumentation",
          "src": "205:55:3",
          "text": " @title Escapable\n @author Ghadi Mhawej*"
        },
        "fullyImplemented": true,
        "id": 272,
        "linearizedBaseContracts": [
          272,
          152,
          112,
          174
        ],
        "name": "Escapable",
        "nameLocation": "273:9:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1f6eb6e7",
            "id": 185,
            "mutability": "mutable",
            "name": "escapeHatchCaller",
            "nameLocation": "333:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 272,
            "src": "318:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 184,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5b61230",
            "id": 187,
            "mutability": "mutable",
            "name": "escapeHatchDestination",
            "nameLocation": "380:22:3",
            "nodeType": "VariableDeclaration",
            "scope": 272,
            "src": "357:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 186,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "357:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 188,
              "nodeType": "StructuredDocumentation",
              "src": "411:40:3",
              "text": "@notice EscapeHatch event definition"
            },
            "eventSelector": "3a7a1ba90aaa86fa9f6b921c3d600a5c870f8ebd05e7fbd30f93930f3caa5db5",
            "id": 192,
            "name": "EscapeHatchCalled",
            "nameLocation": "463:17:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "489:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "481:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "480:16:3"
            },
            "src": "457:40:3"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "697:196:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 196,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "730:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "730:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 198,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "746:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "746:7:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "730:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 201,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "757:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "757:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 203,
                            "name": "escapeHatchCaller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "773:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "757:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "730:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457363617061626c653a2063616c6c6572206973206e6f7420746865206f776e6572206f7220657363617065486174636843616c6c6572",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "805:57:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5005702a6dd0f536c8fd6f7991e26f13d607e07cb2aeb70c753349e2af723fe",
                          "typeString": "literal_string \"Escapable: caller is not the owner or escapeHatchCaller\""
                        },
                        "value": "Escapable: caller is not the owner or escapeHatchCaller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5005702a6dd0f536c8fd6f7991e26f13d607e07cb2aeb70c753349e2af723fe",
                          "typeString": "literal_string \"Escapable: caller is not the owner or escapeHatchCaller\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "708:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:165:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "708:165:3"
                },
                {
                  "id": 209,
                  "nodeType": "PlaceholderStatement",
                  "src": "884:1:3"
                }
              ]
            },
            "documentation": {
              "id": 193,
              "nodeType": "StructuredDocumentation",
              "src": "505:146:3",
              "text": "@dev The addresses preassigned to the `escapeHatchCaller` role or the owner are the only addresses that can call a function with this modifier"
            },
            "id": 211,
            "name": "onlyEscapeHatchCallerOrOwner",
            "nameLocation": "666:28:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:2:3"
            },
            "src": "657:236:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "1301:125:3",
              "statements": [
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 219,
                      "name": "escapeHatchCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "1312:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 220,
                      "name": "_escapeHatchCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "1332:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1312:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:38:3"
                },
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 223,
                      "name": "escapeHatchDestination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1361:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 226,
                          "name": "_escapeHatchDestination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "1394:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1386:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1386:8:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1386:32:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1361:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:57:3"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "901:321:3",
              "text": "@notice The Constructor assigns the `escapeHatchDestination` and the `escapeHatchCaller`\n @param _escapeHatchDestination The address of a safe location to send the ether held in this contract to\n @param _escapeHatchCaller The address of a trusted account or contract to send the ether in this contract"
            },
            "id": 231,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "_escapeHatchCaller",
                  "nameLocation": "1248:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "1240:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "_escapeHatchDestination",
                  "nameLocation": "1276:23:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "1268:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:61:3"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:3"
            },
            "scope": 272,
            "src": "1228:198:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "1710:60:3",
              "statements": [
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 239,
                      "name": "escapeHatchCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "1721:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 240,
                      "name": "_newEscapeHatchCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "1741:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1721:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:41:3"
                }
              ]
            },
            "documentation": {
              "id": 232,
              "nodeType": "StructuredDocumentation",
              "src": "1434:150:3",
              "text": "@notice Changes the address assigned to call `escapeHatch()`\n @param _newEscapeHatchCaller New address to be assigned to escapeHatchCaller"
            },
            "functionSelector": "681617c7",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 237,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 236,
                  "name": "onlyEscapeHatchCallerOrOwner",
                  "nameLocations": [
                    "1676:28:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 211,
                  "src": "1676:28:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1676:28:3"
              }
            ],
            "name": "changeEscapeCaller",
            "nameLocation": "1599:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "_newEscapeHatchCaller",
                  "nameLocation": "1626:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1618:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1617:31:3"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1710:0:3"
            },
            "scope": 272,
            "src": "1590:180:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "2000:147:3",
              "statements": [
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "2019:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "2011:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 252,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2011:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 259,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 256,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2035:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escapable_$272",
                            "typeString": "contract Escapable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Escapable_$272",
                            "typeString": "contract Escapable"
                          }
                        ],
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2027:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2027:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2041:7:3",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2027:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2011:37:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 263,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "2093:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 260,
                        "name": "escapeHatchDestination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "2061:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2084:8:3",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2061:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2061:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "2061:38:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "2133:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 266,
                      "name": "EscapeHatchCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "2115:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2115:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "2110:29:3"
                }
              ]
            },
            "documentation": {
              "id": 245,
              "nodeType": "StructuredDocumentation",
              "src": "1778:142:3",
              "text": "@notice Sends all of the eth contained in the contract to the escapeHatchDestination\n @notice should only be called as last resort"
            },
            "functionSelector": "1554611f",
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 247,
                  "name": "onlyEscapeHatchCallerOrOwner",
                  "nameLocations": [
                    "1958:28:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 211,
                  "src": "1958:28:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1958:28:3"
              },
              {
                "id": 250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 249,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1987:12:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151,
                  "src": "1987:12:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1987:12:3"
              }
            ],
            "name": "escapeHatch",
            "nameLocation": "1935:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1946:2:3"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2000:0:3"
            },
            "scope": 272,
            "src": "1926:221:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 273,
        "src": "264:1886:3",
        "usedErrors": []
      }
    ],
    "src": "33:2119:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-09-03T14:31:01.674Z",
  "devdoc": {
    "author": "Ghadi Mhawej*",
    "kind": "dev",
    "methods": {
      "changeEscapeCaller(address)": {
        "params": {
          "_newEscapeHatchCaller": "New address to be assigned to escapeHatchCaller"
        }
      },
      "constructor": {
        "params": {
          "_escapeHatchCaller": "The address of a trusted account or contract to send the ether in this contract",
          "_escapeHatchDestination": "The address of a safe location to send the ether held in this contract to"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Escapable",
    "version": 1
  },
  "userdoc": {
    "events": {
      "EscapeHatchCalled(uint256)": {
        "notice": "EscapeHatch event definition"
      }
    },
    "kind": "user",
    "methods": {
      "changeEscapeCaller(address)": {
        "notice": "Changes the address assigned to call `escapeHatch()`"
      },
      "constructor": {
        "notice": "The Constructor assigns the `escapeHatchDestination` and the `escapeHatchCaller`"
      },
      "escapeHatch()": {
        "notice": "Sends all of the eth contained in the contract to the escapeHatchDestinationshould only be called as last resort"
      }
    },
    "version": 1
  }
}